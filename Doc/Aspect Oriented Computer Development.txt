Aspect Oriented Computer Development of Clocked & Radiant Design


This is a thing of the past. This object or that. This inherits from that. Where is That represented? In object oriented programming, “That” is not anywhere to be found. Yet “This” is Object-Oriented. To afford Aspect, use That. That is the Aspect. Aspect Oriented approach is functional. Light itself is (That) approach. Itself a shard of light. Light as a state of being, when light was shed, is a shard. A Shard then is a tangible aspect, oriented to-ford light. Shard at aspect is potential to continue radiance. Light as self is nothing. Shard delivered to continuum is evoked. Evocation is light of shard being operative environment. An operative environment is constant, like an object-oriented program is a constant, where Aspect to Radiance is Element. Operating Systems are sort of elemental, like this, where Kernel is like Radiant, however Kernels do not emit light. Operative System is unlike Kernel, in that it is only a mirror of potential functionality. Mirror existent is Operative System of Elements. When looking in a mirror, one is using Time. When Looking, through Time, one is Light. Light seen from the side, Then is a Shard. Then, the state of the environment, of continuum, was Shed than Itself into Shard. “Was” granular of Shard exists at Element Shed is Shadow. Evocation of Element exists as Evoker to Entrant. Entrant is use of exposed Operative System, to Evoke Element. Time is Then.


So to afford Light, use Time. Time as current application existence within Operating Systems is use of Clock. Clock Speed divided by Clock frequency is hertz. Expect cycle based upon Clock is return to Program to continue operation of Time. Flow of program procedure in object oriented design is encapsulation. Functional is not This way. Object has instance and is used as State among methods, and polymorphic distribution of expectation. Expectation is also that a Clock exists. Cyclic behavior is always brought into a Program, and this cycle is like cosm of larger whole cosmic system based upon Clock. To think of a Clock as Time is Object. But Time is not an object. Time is actual flow of program. Then to think of Clock being involved in Flow makes mind Dualistic. Radiance is destroyed, and Mind comes to a Halt. But yet, this exists, and to continue, one must move the mind, and start again. Without a Clock behavior is unrepetitive. Flow of a punch-card worked this way. Now a program is not executed like a punch-card. Program is torn into pieces and placed into a cyclic system, where multi-tasking distributes power of operation across entire Time of the computer. This is difficult to conceive. Threading makes is hardest. Entrance into Kernel to afford something new is difficult.


Well being of programmer is concern here. To mask individual right a Clock is used. Yet program defined as of clock causes mind to form Dualism. This approach of Object-Oriented class, device, computer and individual creates mind of Clock, not Time. Space between Seconds of Nano-seconds is not used. The actual Seconds and Nano-seconds are used instead. As particles upon flow of Time, these Objects or States are pivots of control. Points, Pivots, Posits are positives. Positive character of individual in human existence lacks these entirely, and is Flow of Time itself. To do a Point, or a Pivot or to Posit is largely Philosophical nature of Open Religious behavior. Not of a Closed Science. So then a Programmer of an Environment must attempt to create a Closed Science which adheres to a System designed of the same approach. Yet where is the Closed Religious Nature of a Computer? The Clock is basically it. Cyclic existence. Constants resting upon the Clock include Memory, Interrupt, CPU and Bus. Nodes upon Bus behave according to Time. Time itself is Electricity run through Clock. Yet where Clock Battery powers Quartz and CPU is powered by external source, the two powers co-mingle synchronously. Synchronicity is a well running system, yet there is always Lag. Space between Cycles always exists unused. Wait states are trial and error eliminated to fault of ones own mind. Revision and Version of Open Religious System.


So, where Virtue exists in the world is where Closed Science has defined a Religion. Virtue is use of the Religion. So where virtue exists in a programming system is where virtue exists in an individual subscribing to use of it as a religion. And religious use of computer systems is where virtue becomes The Problem. Clock is the “virtue” of computers today, and clock is Not time, but is a waste of space between ticks of the clock. That is non-virtuous. But, synchronous programming is not all that exists, and virtue of the Clock is therefore not all that exists for Programmers. So then definition of Virtue extending beyond the Clock is an improvement to individuals bound at Cyclic Existence of Religious Computer Use and Development. We Seek an Ideal Operating System to Free Us All. Freed from the bounds of the Clock, the Cycle and the Constant debasing of what has already been created. So to afford Virtue beyond the Clock, I have invested in Virtue of human behavior down to the level of Hell, Ghost, Animal, Human, and perhaps Beyond, but with an interest in God being excluded, I propose the behavior of a religious system does not interfere with ones own existing relationship with God above. I propose a Closed Operative System of Time in Virtues predefined to the level of a punch-card which perform the functional basis of any Operative existent today. A Closed product of Philosophy arrived at Virtue.


You know, so where this exists in Religion, you may simply toss out, because I am not interested in God. To me, God is the Trees! And as Humans we benefit from Trees, and as Trees, humans benefit humans. But we need not destroy Trees. Lest ye be efficient in design at of virtue, than nor. So, basically I designed the system without using IF, ELSE. Radiance is possible on a computer. Even emulation of Radiance is efficient on existing clock-based solutions. Radiance is also moveable to asynchronous functional design. Recognizing that Clock is the single virtue of synchronous computing today, know Radiance is Operative as synchronous and asynchronous by definition of more than one Time. Computers existing of Clock-based behavior use a Time, and potential asynchronous solutions use more than this. The clock need not be used. The punch-card need not go into the machine at a pre-defined Time. Aspect to the Punch-card is one of the holes. Light shines through the hole. Your Operatives rest upon those holes. When the punch-card is read, the behavior of your Operative is evoked. Evocation of a hole is delivery of expectation in Time. You create Time by resolute elemental definition. Dependency is upon Closed Operative System, and therefore is the set of Virtues which remain constant, defining all potential.


Motivation to establish Clock-based computing became of punch-based design, as means of repetition. So science established computing from the mindset of discovering a solution to work. However, as computing has become mainstream these days, our needs are not merely scientific. In fact, internet computing of the social sphere does not use mathematics beyond counting to produce its results, save searching paradigms. But to consider approach to development has always required mathematic background, the institution of computers has depended on math because of the science who produced it. So on, to think a computer could exist independently of the mathematical process of science is weird. But weird science it has become. Alchemical even. Entire computer based upon repetition of the cycle, and entire industry resting upon inward cyclic design always have produced better and more than before, yet with always rewarding the same deficient design of a single virtue. Like standing a needle on its head is all we may now do to develop upon them. So, where cycle has proved its worth as the fundamental to process, regard Aspect-Oriented design as resolving a single Cycle as the approach, meant cosmos, yet then needing let go of the cyclic ideal entirely to produce the Aspect of Time at stopped. So, not to consider the flow of Time as what will happen when next, but at Aspect, what occurs is Time itself.


So as Virtue expressed is the importance to develop a mind-freeing habit, the computer itself is innately Virtuous. That be, to do with it, in what this is, as developer, or as individual, the act of use is essentially Virtuous. That is how it is freeing. That is also important for the future of humanity in using such. Because, as computers yeilded from science into Clock, repetition, and all the Internet had today, mathematics was the basis, and is still not a closed science resolving all. So while mathematics was the basis, and is still lacking, is open religion, the computer depends on that, and that does not work correctly. The clock-dependent-basis actually compromises one to work on slower than live food, to avoid interruption of transistor process, and to keep sanity of programmer at level able under full human potential. That sad fact is true that how computer developers have become excellent today, is also at a deficit to their home-life potential being happy. Yes? No, when considering that neutrality can be established when developing away from neutral live existent individuals, and Yes, when considering that neutrality cannot be maintained if continuing to develop in the same space with others.


Where development of computers can excel as social collaborative approach is with Aspect. To envision a scene of Time with one other or a group of others, and regard that Aspects exist is potentially profitable even without words. The scene itself exists, and Aspects can be plucked and put into place. Existing applications need not apply. Repetition of functional universe within Internet itself is as one knows to be exciting to pursue but largely obtrusive to use, as connections fail to deliver what is needed when devices lose power. Now then dependence on Device itself becomes issue to Virtuous activity. So then Virtuous basis of design also distributes Virtuous activity in development such that at device loss or compromise, one still has oneself of Virtue to arise at social means; not merely technological. So it is also that with the clock. For without a clock, how will I know how to coordinate with another individual? And depending not on the clock, if I am, able to meet one perhaps, it is largely without a device involved at all. The world however is now full of devices to coordinate us, and Time as Clock is the basis to do so, need not mention Space as well.


Time and Space considered, it is essential to point out that Quantum Physics is the principle scientific basis to define such, at compat with Internet industry. Mathematical basis to deliver compatible means of Time & Space in computing is new, yet science has yet to completely close as Religion. Considering Time, Space & Matter is next development in science, yet computers based upon Clock are not invited. Matter itself is restricted but consciousness of Matter is not. So where Light & Dark exist, computer is on one side, and continues to rotate clock-wise doing the same thing, and individuals are also required to stay on that side of Matter to develop Time & Space. Now asynchronous design of computer dependent not on Clock does not really afford us to continue what we already have, the same as deprecated approaches fluorish in computing and are retired. But on to the next design, regarding science, religion, philosophy, accept Virtue is defined by a body of Science holding keys to the Quantum already known to be both magical, logical and excellent to human kind, at what once was Utopia prior to the introduction of Electricity in the world. So for me, it was necessary to see this, to leave behind the Clock, Logic and Duality.
